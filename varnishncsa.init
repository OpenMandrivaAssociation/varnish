#! /bin/sh
#
# varnishncsa Control the varnish nsca logging daemon
#
# chkconfig: 235 90 10
# description: Varnish logging daemon
# processname: varnishncsa
# config: 
# pidfile: /var/run/varnish/varnishncsa.pid

### BEGIN INIT INFO
# Provides: varnishncsa
# Required-Start: $network $local_fs $remote_fs
# Required-Stop: $network $local_fs $remote_fs
# Short-Description: start and stop varnishncsa
# Description: Varnish HTTP accelerator logging daemon
### END INIT INFO

# Source function library.
. /etc/init.d/functions

RETVAL=0
pidfile="/var/run/varnish/varnishncsa.pid"
lockfile="/var/lock/subsys/varnishncsa"
logfile="/var/log/varnish/varnishncsa.log"
prog="varnishncsa"
progfile="/usr/bin/$prog"

DAEMON_OPTS="-a -w $logfile -D -P $pidfile"

# Include defaults
[ -e /etc/sysconfig/varnishncsa ] && . /etc/sysconfig/varnishncsa

start() {

	if [ ! -x $progfile ]; then
	    echo $progfile not found
	    exit 5
	fi

	echo -n "Starting varnish ncsa logging daemon: "

	daemon --pidfile $pidfile $progfile "$DAEMON_OPTS" 
	echo
	return $RETVAL
}

stop() {
	echo -n "Stopping varnish ncsa logging daemon: "
	killproc -p $pidfile $prog
	RETVAL=$?
	echo
	[ $RETVAL -eq 0 ] && rm -f $lockfile
	return $RETVAL
}

restart() {
	stop
	start
}

reload() {
	restart
}

force_reload() {
	restart
}

rh_status() {
	status -p $pidfile $prog
}

rh_status_q() {
	rh_status >/dev/null 2>&1
}

# See how we were called.
case "$1" in
	start)
		rh_status_q && exit 0
		$1
		;;
	stop)
		rh_status_q || exit 0
		$1
		;;
	restart)
		$1
		;;
	reload)
		rh_status_q || exit 7
		$1
		;;
	force-reload)
		force_reload
		;;
	status)
		rh_status
		;;
	condrestart|try-restart)
		rh_status_q || exit 0
		restart
		;;
	*)
	echo "Usage: $0 {start|stop|status|restart|condrestart|try-restart|reload|force-reload}"

	exit 2
esac

exit $?
